package com.qiantang.neighbourmother.ui.community;

import android.content.Intent;
import android.os.Message;
import android.os.Parcelable;
import android.view.View;
import android.widget.Button;
import android.widget.ImageView;

import com.google.gson.Gson;
import com.google.gson.reflect.TypeToken;
import com.qiantang.neighbourmother.R;
import com.qiantang.neighbourmother.business.data.TagListHttp;
import com.qiantang.neighbourmother.logic.BbsTagUtil;
import com.qiantang.neighbourmother.model.TagObj;
import com.qiantang.neighbourmother.ui.BaseActivity;
import com.qiantang.neighbourmother.util.AppLog;
import com.qiantang.neighbourmother.util.IntentFinal;
import com.qiantang.neighbourmother.util.PropertyConfig;
import com.qiantang.neighbourmother.widget.taglayout.Tag;
import com.qiantang.neighbourmother.widget.taglayout.TagListView;

import java.util.ArrayList;
import java.util.List;

/**
 * Created by quliang on 16-12-5.
 */

public class TagActivity extends BaseActivity implements View.OnClickListener{
    private ImageView back;
    private TagListView tagListView;
    private Button bottom_sure;
    private BbsTagUtil bbsTagUtil=  new BbsTagUtil();

    /*用户已经选择的标签*/
    private int labelId[] = null;

    @Override
    public int getContentView() {
        return R.layout.activity_tag;
    }

    @Override
    public void initView() {
        back=(ImageView)findViewById(R.id.back);
        tagListView=(TagListView)findViewById(R.id.tagListView);
        bottom_sure=(Button)findViewById(R.id.bottom_sure);
    }

    @Override
    public void initData() {
//        bbsTagUtil.initTagListConfig(this,labelId);
//        tagListView.setTags(bbsTagUtil.getmTags());

        new TagListHttp(this,handler,1,true);
    }

    @Override
    public void initEvent() {
        back.setOnClickListener(this);
        bottom_sure.setOnClickListener(this);
    }

    @Override
    protected void updateUI(Message msg) {
switch (msg.what){
    case 1:
        ArrayList<TagObj> tagObjs=(ArrayList<TagObj>)msg.obj;
        tagListView.setTags(tagObjs);
        closeProgressDialog();
        break;
}
    }

    @Override
    public void onClick(View v) {
        switch (v.getId()){
            case R.id.back:
                finish();
                break;
            case R.id.bottom_sure:

                tagListView.getmTags().size();


ArrayList<TagObj> tags=new ArrayList<TagObj>();

                for (int i = 0; i < tagListView.getmTags().size(); i++) {
                    TagObj indexTag = tagListView.getmTags().get(i);
                    if (indexTag.isChecked()) {
                        tags.add(indexTag);
                    }
                    }

                AppLog.D("tags.size():"+tags.size());

                Intent intent = new Intent();
                PropertyConfig.getInstance(this).save(IntentFinal.PREF_PUBLIC_COMM_ALREADY_CHOOSE_TAG,new Gson().toJson(tags,new TypeToken<List<TagObj>>(){}.getType()));
                setResult(3, intent);
                finish();
                break;
        }
    }


//    private void setTabSelected(List<TagObj> mTags, int[] labelId) {
//
//        if (labelId != null) {
//            mTags.get(10).setChecked(false);
//
//            for (int i = 0; i < labelId.length; i++) {
//                for (Tag tag : mTags) {
//                    if (tag.getId() == labelId[i]) {
//                        tag.setChecked(true);
//                        break;
//                    }
//                }
//            }
//        } else {
//            mTags.get(23).setChecked(true);
//        }
//    }
}
