package com.qiantang.neighbourmother.ui.center.attache;

import android.content.Intent;
import android.os.Message;
import android.util.DisplayMetrics;
import android.view.Gravity;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.ScrollView;
import android.widget.TextView;

import com.google.gson.Gson;
import com.google.gson.reflect.TypeToken;
import com.qiantang.neighbourmother.R;
import com.qiantang.neighbourmother.business.API;
import com.qiantang.neighbourmother.business.response.ChildInfoResp;
import com.qiantang.neighbourmother.business.response.UserInfoResp;
import com.qiantang.neighbourmother.logic.ChildContacts;
import com.qiantang.neighbourmother.logic.UserContacts;
import com.qiantang.neighbourmother.model.ServiceTypeobj;
import com.qiantang.neighbourmother.ui.BaseActivity;
import com.qiantang.neighbourmother.ui.activity.PhotoViewActivity;
import com.qiantang.neighbourmother.ui.activity.PhotoViewPagerActivity;
import com.qiantang.neighbourmother.util.AppLog;
import com.qiantang.neighbourmother.util.IntentFinal;
import com.qiantang.neighbourmother.util.QLScreenUtil;
import com.qiantang.neighbourmother.widget.CircleImageView;

import java.util.List;

/**
 * ClassName:个人中心专员详情
 * author: Cocoa
 * date: 2016/9/23.
 */
public class AttacheOneselfDetailsActivity extends BaseActivity implements View.OnClickListener {
    private ImageView       back;//返回
    private CircleImageView person_headimg;//专员头像
    private ImageView       attache_sex;//性别
    private TextView        person_name;//专员姓名
    private TextView        attache_age;//专员年龄
    private TextView        attache_post;//专员行业
    private TextView        person_service_type;//专员服务类型
    private TextView        person_address;//专员地址
    private TextView        contact_phone;//手机

    private TextView     nickname;//昵称
    private TextView     sex;//性别
    private TextView     school;//学校
    private TextView     grade;//年级
    private LinearLayout ll_environment_all;//环境信息（ 控制隐藏显示）
    private LinearLayout ll_environment;//环境信息（动态生成图片）
//    private ImageView    environment_image1;
//    private ImageView    environment_image2;
//    private ImageView    environment_image3;

    private LinearLayout ll_vehicle_info;//车辆信息（控制隐藏显示）
    private TextView     plate_number;//车牌号
    private ImageView    vehicle_image;//车辆图片
    private TextView     vehicle_model;//车型
    private TextView     vehicle_condition;//车况
    private TextView     vehicle_age;//车龄
    private TextView     driver_age;//驾龄
    private TextView     driver_licence;//驾驶证


    private LinearLayout ll_qualification_info;//资格信息（控制隐藏显示）
    private ImageView    teacher_certification_img;//教育资格证
    private ImageView    education_certification_img;//学历证明

    private LinearLayout ll_service_content;//服务内容

    //    private TextView btn_choice;//选择专员按钮
//    private RelativeLayout rl_choice;//选择专员按钮隐藏显示控制
    private ScrollView    sv_content;//
    private LinearLayout  ll_all_service_type;//服务类型
    private LinearLayout  ll_children_info;//孩子信息
    private UserInfoResp  userInfoResp;
    private ChildInfoResp childInfoResp;
    private String[]      educationImages;

    @Override
    public int getContentView() {
        return R.layout.activity_attache_oneself_details;
    }

    @Override
    public void initView() {
        back = (ImageView) findViewById(R.id.back);
        attache_sex = (ImageView) findViewById(R.id.attache_sex);
        person_headimg = (CircleImageView) findViewById(R.id.person_headimg);
        person_name = (TextView) findViewById(R.id.person_name);
        sv_content = (ScrollView) findViewById(R.id.sv_content);
        attache_age = (TextView) findViewById(R.id.attache_age);
        attache_post = (TextView) findViewById(R.id.attache_post);
        person_service_type = (TextView) findViewById(R.id.person_service_type);
        person_address = (TextView) findViewById(R.id.person_address);
        contact_phone = (TextView) findViewById(R.id.contact_phone);
        nickname = (TextView) findViewById(R.id.nickname);
        sex = (TextView) findViewById(R.id.sex);
        school = (TextView) findViewById(R.id.school);
        grade = (TextView) findViewById(R.id.grade);
        ll_environment_all = (LinearLayout) findViewById(R.id.ll_environment_all);
        ll_environment = (LinearLayout) findViewById(R.id.ll_environment);
//        environment_image1 = (ImageView) findViewById(R.id.environment_image1);
//        environment_image2 = (ImageView) findViewById(R.id.environment_image2);
//        environment_image3 = (ImageView) findViewById(R.id.environment_image3);

        ll_vehicle_info = (LinearLayout) findViewById(R.id.ll_vehicle_info);
        plate_number = (TextView) findViewById(R.id.plate_number);
        vehicle_image = (ImageView) findViewById(R.id.vehicle_image);
        vehicle_model = (TextView) findViewById(R.id.vehicle_model);
        vehicle_condition = (TextView) findViewById(R.id.vehicle_condition);
        vehicle_age = (TextView) findViewById(R.id.vehicle_age);
        driver_age = (TextView) findViewById(R.id.driver_age);
        driver_licence = (TextView) findViewById(R.id.driver_licence);
        ll_qualification_info = (LinearLayout) findViewById(R.id.ll_qualification_info);
        teacher_certification_img = (ImageView) findViewById(R.id.teacher_certification_img);
        education_certification_img = (ImageView) findViewById(R.id.education_certification_img);
        ll_service_content = (LinearLayout) findViewById(R.id.ll_service_content);
        ll_all_service_type = (LinearLayout) findViewById(R.id.ll_all_service_type);
        ll_children_info = (LinearLayout) findViewById(R.id.ll_children_info);
        initCell();

    }


    @Override
    public void initData() {
        userInfoResp = UserContacts.getUserInfo(this);
        childInfoResp = ChildContacts.getChildInfo(this);
        int[] showContent = userInfoResp.getServant_type_array_id();
        AppLog.D("showContent.length" + showContent.length);
        if (showContent == null) {
            ll_vehicle_info.setVisibility(View.GONE);
            ll_environment_all.setVisibility(View.GONE);
            ll_qualification_info.setVisibility(View.GONE);
            sv_content.setVisibility(View.GONE);
        } else {
            for (int i = 0; i < showContent.length; i++) {

                int num = showContent[i];
                AppLog.D("showContent.num" + num);
                if (num == 1) {

                }
                if (num == 2) {
                    ll_environment_all.setVisibility(View.VISIBLE);
                    AppLog.D("ll_environment_all.num" + num);
                }
                if (num == 3) {
                    ll_qualification_info.setVisibility(View.VISIBLE);
                    AppLog.D("ll_qualification_info.num" + num);
                }
                if (num == 4) {
                    ll_vehicle_info.setVisibility(View.VISIBLE);
                    AppLog.D("ll_vehicle_info.num" + num);
                }
            }
        }

//        if (childInfoResp == null) {
//            ll_children_info.setVisibility(View.GONE);
//        } else {
//            if (TextUtils.isEmpty(childInfoResp.getChild_id())) {
//                ll_children_info.setVisibility(View.GONE);
//            } else {
//                ll_children_info.setVisibility(View.GONE);
//            }
//        }
//
//        switch (userInfoResp.getUser_type()) {
//            case 1:
//                ll_children_info.setVisibility(View.GONE);
//                break;
//            case 2:
//                ll_children_info.setVisibility(View.VISIBLE);
//                break;
//            case 3:
//                ll_children_info.setVisibility(View.GONE);
//                break;
//            default:
//                ll_children_info.setVisibility(View.GONE);
//                break;
//        }

        ll_children_info.setVisibility(View.GONE);
        setText(userInfoResp);
        List<ServiceTypeobj> serviceTypeobjs = userInfoResp.getService_tag_array();
        if (serviceTypeobjs != null && serviceTypeobjs.size() > 0) {
            ll_all_service_type.setVisibility(View.VISIBLE);
            createServiceContent(serviceTypeobjs);
        } else {
            ll_all_service_type.setVisibility(View.GONE);
        }

    }

    private void setText(UserInfoResp userInfoResp) {
        display(person_headimg, API.BASE_IMG_URL + userInfoResp.getUser_avatar(), R.mipmap.default_img);
        person_name.setText(userInfoResp.getUser_name());
        attache_age.setText(userInfoResp.getUser_age() + "岁");
        attache_post.setText(userInfoResp.getIndustry());
        StringBuilder builder = new StringBuilder();
        String[]      type    = userInfoResp.getServant_type_array_string();
        for (int i = 0; i < type.length; i++) {
            builder.append(type[i]);
            if (i == type.length - 1) {
                builder.append("");
            } else {
                builder.append("  ");
            }
        }
        AppLog.D("builder" + builder.toString());
        person_service_type.setText(builder.toString());
        person_address.setText(userInfoResp.getProvince_name() + userInfoResp.getCity_name() + userInfoResp.getDistrict_name() + userInfoResp.getUser_community() + userInfoResp.getUser_address());
        attache_sex.setSelected(userInfoResp.getUser_gender() == 1 ? true : false);
        contact_phone.setText(userInfoResp.getUser_phone());

        nickname.setText(childInfoResp.getChild_nickname());
        if (childInfoResp.getChild_gender() == 0) {
            sex.setText("");
        } else {
            sex.setText(childInfoResp.getChild_gender() == 1 ? "男" : "女");
        }
        school.setText(childInfoResp.getChild_school());
        grade.setText(childInfoResp.getChild_grade());


//        display(environment_image1, API.BASE_IMG_URL + userInfoResp.getPic_environment_1(), R.mipmap.default_img);
//        display(environment_image2, API.BASE_IMG_URL + userInfoResp.getPic_environment_2(), R.mipmap.default_img);
//        display(environment_image3, API.BASE_IMG_URL + userInfoResp.getPic_environment_3(), R.mipmap.default_img);
        String arr[] = {userInfoResp.getPic_environment_1(), userInfoResp.getPic_environment_2(), userInfoResp.getPic_environment_3()};
        educationImages = new String[2];
        createEnvironmentImage(arr);
        plate_number.setText(userInfoResp.getCar_number());
        display(vehicle_image, API.BASE_IMG_URL + userInfoResp.getCar_pic(), R.mipmap.default_img);
        vehicle_model.setText(userInfoResp.getCar_model());
        vehicle_condition.setText(userInfoResp.getCar_condition());
        vehicle_age.setText(userInfoResp.getCar_age());
        driver_age.setText(userInfoResp.getCar_driving());
        driver_licence.setText(userInfoResp.getCar_license_number());
        display(teacher_certification_img, API.BASE_IMG_URL + userInfoResp.getPic_teacher(), R.mipmap.default_img);
        display(education_certification_img, API.BASE_IMG_URL + userInfoResp.getPic_education(), R.mipmap.default_img);
        educationImages[0] = userInfoResp.getPic_teacher();
        educationImages[1] = userInfoResp.getPic_education();
        sv_content.setVisibility(View.VISIBLE);

    }

    /**
     * 创建专员详情底部服务内容
     *
     * @param service
     */
    private void createServiceContent(List<ServiceTypeobj> service) {
        ll_service_content.removeAllViews();
        if (service != null && service.size() > 0) {
            LinearLayout linera = null;
            for (int i = 0; i < service.size(); i++) {

                if (i % 2 == 0) {
                    linera = new LinearLayout(this);
                    LinearLayout.LayoutParams lparams = new LinearLayout.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.WRAP_CONTENT);
                    lparams.gravity = Gravity.CENTER_VERTICAL;
                    lparams.topMargin = (int) QLScreenUtil.dpToPxInt(this, 10);
                    linera.setOrientation(LinearLayout.HORIZONTAL);
                    linera.setLayoutParams(lparams);
                    ll_service_content.addView(linera);

                    TextView                  tv_text = new TextView(this);
                    LinearLayout.LayoutParams tparams = new LinearLayout.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.WRAP_CONTENT);
                    tparams.gravity = Gravity.CENTER_VERTICAL;
                    tv_text.setLayoutParams(tparams);
                    tv_text.setPadding((int) QLScreenUtil.dpToPxInt(this, 5), (int) QLScreenUtil.dpToPxInt(this, 2), (int) QLScreenUtil.dpToPxInt(this, 5), (int) QLScreenUtil.dpToPxInt(this, 2));
                    tv_text.setTextColor(getResources().getColor(R.color.white));
                    tv_text.setBackgroundResource(R.drawable.attache_details_service_content_backgroud);
                    tv_text.setText(service.get(i).getService_tag_name());
                    tv_text.setSelected(service.get(i).getCheckable() == 1 ? true : false);
                    linera.addView(tv_text);
                } else {
                    TextView                  tv_text = new TextView(this);
                    LinearLayout.LayoutParams tparams = new LinearLayout.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.WRAP_CONTENT);
                    tparams.gravity = Gravity.CENTER_VERTICAL;
                    tparams.leftMargin = (int) QLScreenUtil.dpToPxInt(this, 15);
                    tv_text.setLayoutParams(tparams);
                    tv_text.setPadding((int) QLScreenUtil.dpToPxInt(this, 5), (int) QLScreenUtil.dpToPxInt(this, 2), (int) QLScreenUtil.dpToPxInt(this, 5), (int) QLScreenUtil.dpToPxInt(this, 2));
                    tv_text.setTextColor(getResources().getColor(R.color.white));
                    tv_text.setBackgroundResource(R.drawable.attache_details_service_content_backgroud);
                    tv_text.setText(service.get(i).getService_tag_name());
                    tv_text.setSelected(service.get(i).getCheckable() == 1 ? true : false);
                    linera.addView(tv_text);
                }


            }
        }
    }


    /**
     * 创建环境图片
     *
     * @param images
     */
    private void createEnvironmentImage(String[] images) {
        ll_environment.removeAllViews();
        if (images != null && images.length > 0) {

            LinearLayout layout = null;
            for (int i = 0; i < images.length; i++) {
                if (i % 3 == 0) {
                    layout = new LinearLayout(this);
                    LinearLayout.LayoutParams layoutparams = new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT);
                    layoutparams.gravity = Gravity.CENTER_VERTICAL;
                    if (i > 0 && i % 3 == 0) {
                        layoutparams.topMargin = (int) QLScreenUtil.dpToPxInt(this, 10);
                    } else {
                        layoutparams.topMargin = (int) QLScreenUtil.dpToPxInt(this, 0);
                    }
                    layout.setOrientation(LinearLayout.HORIZONTAL);
                    layout.setLayoutParams(layoutparams);
                    layout.removeAllViews();
                    ll_environment.addView(layout);
                }
                if (i % 3 > 0) {
                    ImageView                 image  = new ImageView(this);
                    LinearLayout.LayoutParams params = new LinearLayout.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.WRAP_CONTENT);
                    image.setLayoutParams(params);
                    initEnvironmentImage(image, (int) QLScreenUtil.dpToPx(this, 10), 0, (int) QLScreenUtil.dpToPx(this, 0), 0);
//                    image.setImageResource(images[i]);
                    display(image, API.BASE_IMG_URL + images[i], R.mipmap.default_img);
                    image.setOnClickListener(new OnClickEnvironmentImageListener(images, i));
                    layout.addView(image);
                } else {
                    ImageView                 image  = new ImageView(this);
                    LinearLayout.LayoutParams params = new LinearLayout.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.WRAP_CONTENT);
                    image.setLayoutParams(params);
                    initEnvironmentImage(image, (int) QLScreenUtil.dpToPx(this, 0), 0, (int) QLScreenUtil.dpToPx(this, 0), 0);
                    display(image, API.BASE_IMG_URL + images[i], R.mipmap.default_img);
                    image.setOnClickListener(new OnClickEnvironmentImageListener(images, i));
                    layout.addView(image);

                }

            }
        }

    }

    class OnClickEnvironmentImageListener implements View.OnClickListener {
        private String[] images;
        private int      index;

        OnClickEnvironmentImageListener(String[] images, int index) {
            this.images = images;
            this.index = index;
        }

        @Override
        public void onClick(View v) {
            Intent mIntent = new Intent(AttacheOneselfDetailsActivity.this, PhotoViewPagerActivity.class);
            mIntent.putExtra(IntentFinal.INTENT_IMGURL_TO_PHOTOVIEWACTIVITY, new Gson().toJson(images, new TypeToken<String[]>() {
            }.getType()));
            mIntent.putExtra(IntentFinal.INTENT_IMGURL_INDEX_PHOTOVIEWACTIVITY, index);
            startActivity(mIntent);
        }
    }

    @Override
    public void initEvent() {
        back.setOnClickListener(this);
//        environment_image1.setOnClickListener(this);
//        environment_image2.setOnClickListener(this);
//        environment_image3.setOnClickListener(this);
        teacher_certification_img.setOnClickListener(this);
        education_certification_img.setOnClickListener(this);
        vehicle_image.setOnClickListener(this);
        person_headimg.setOnClickListener(this);
    }

    @Override
    protected void updateUI(Message msg) {

    }


    /**
     * 初始化图片寛高
     */
    private void initCell() {
        float          unit           = 15f;
        DisplayMetrics displayMetrics = new DisplayMetrics();
        getWindowManager().getDefaultDisplay().getMetrics(displayMetrics);
        int red_width = (displayMetrics.widthPixels - (int) QLScreenUtil.dpToPx(this, unit * 2 + 22)) / 3;

        cacuCellWH(vehicle_image, red_width, red_width, 0, 0, (int) QLScreenUtil.dpToPx(this, 0), 0);

//        cacuCellWH(environment_image1, red_width, red_width, 0, 0, (int) QLScreenUtil.dpToPx(this, 0), 0);
//        cacuCellWH(environment_image2, red_width, red_width, (int) QLScreenUtil.dpToPx(this, 10), 0, (int) QLScreenUtil.dpToPx(this, 0), 0);
//        cacuCellWH(environment_image3, red_width, red_width, (int) QLScreenUtil.dpToPx(this, 10), 0, (int) QLScreenUtil.dpToPx(this, 0), 0);

        cacuCellWHrela(teacher_certification_img, red_width, red_width, 0, 0, (int) QLScreenUtil.dpToPx(this, 0), 0);
        cacuCellWHrela(education_certification_img, red_width, red_width, (int) QLScreenUtil.dpToPx(this, 10), 0, 0, 0);

    }

    /**
     * 计算创建环境图片寛高
     *
     * @param view
     * @param left
     * @param top
     * @param right
     * @param bottom
     */
    private void initEnvironmentImage(View view, int left, int top, int right, int bottom) {
        float          unit           = 15f;
        DisplayMetrics displayMetrics = new DisplayMetrics();
        getWindowManager().getDefaultDisplay().getMetrics(displayMetrics);
        int red_width = (displayMetrics.widthPixels - (int) QLScreenUtil.dpToPx(this, unit * 2 + 22)) / 3;
        cacuCellWH(view, red_width, red_width, left, top, right, bottom);
    }

    /**
     * 计算创建相对布局下图片寛高
     *
     * @param view
     * @param widht
     * @param height
     * @param left
     * @param top
     * @param right
     * @param bottom
     */
    private void cacuCellWHrela(View view, int widht, int height, int left, int top, int right, int bottom) {
        RelativeLayout.LayoutParams layoutParams = (RelativeLayout.LayoutParams) view.getLayoutParams();
        layoutParams.setMargins(left, top, right, bottom);
        layoutParams.height = height;
        layoutParams.width = widht;
        view.setLayoutParams(layoutParams);
        view.postInvalidate();
    }

    /**
     * 计算创建线性布局下图片寛高
     *
     * @param view
     * @param widht
     * @param height
     * @param left
     * @param top
     * @param right
     * @param bottom
     */
    private void cacuCellWH(View view, int widht, int height, int left, int top, int right, int bottom) {
        LinearLayout.LayoutParams layoutParams = (LinearLayout.LayoutParams) view.getLayoutParams();
        layoutParams.setMargins(left, top, right, bottom);
        layoutParams.height = height;
        layoutParams.width = widht;
        view.setLayoutParams(layoutParams);
        view.postInvalidate();
    }

    private void lookOver(int position) {
        Intent intent = new Intent(this, PhotoViewActivity.class);
        if (userInfoResp != null) {
            switch (position) {
//                case 1:
//                    intent.putExtra(IntentFinal.INTENT_IMGURL_TO_PHOTOVIEWACTIVITY, API.BASE_IMG_URL + userInfoResp.getPic_environment_1());
//                    break;
//                case 2:
//                    intent.putExtra(IntentFinal.INTENT_IMGURL_TO_PHOTOVIEWACTIVITY, API.BASE_IMG_URL + userInfoResp.getPic_environment_2());
//                    break;
//                case 3:
//                    intent.putExtra(IntentFinal.INTENT_IMGURL_TO_PHOTOVIEWACTIVITY, API.BASE_IMG_URL + userInfoResp.getPic_environment_3());
//                    break;
//                case 4:
//                    intent.putExtra(IntentFinal.INTENT_IMGURL_TO_PHOTOVIEWACTIVITY, API.BASE_IMG_URL + userInfoResp.getPic_teacher());
//                    break;
//                case 5:
//                    intent.putExtra(IntentFinal.INTENT_IMGURL_TO_PHOTOVIEWACTIVITY, API.BASE_IMG_URL + userInfoResp.getPic_education());
//                    break;
                case 6:
                    intent.putExtra(IntentFinal.INTENT_IMGURL_TO_PHOTOVIEWACTIVITY, API.BASE_IMG_URL + userInfoResp.getCar_pic());
                    break;
                case 7:
                    intent.putExtra(IntentFinal.INTENT_IMGURL_TO_PHOTOVIEWACTIVITY, API.BASE_IMG_URL + userInfoResp.getUser_avatar());
                    break;
            }
            startActivity(intent);
        }


    }

    @Override
    public void onClick(View view) {
        switch (view.getId()) {
            case R.id.back:
                finish();
                break;
//            case R.id.environment_image1:
////                clickenvironment_image();
//                lookOver(1);
//                break;
//            case R.id.environment_image2:
//                lookOver(2);
//                break;
//            case R.id.environment_image3:
//                lookOver(3);
//                break;
            case R.id.teacher_certification_img:
                clickEducation_image(educationImages, 0);
                break;
            case R.id.education_certification_img:
                clickEducation_image(educationImages, 1);
                break;
            case R.id.vehicle_image:
                lookOver(6);
                break;
            case R.id.person_headimg:
                lookOver(7);
                break;
        }
    }

    private void clickEducation_image(String[] imgs, int index) {
        Intent mIntent = new Intent(this, PhotoViewPagerActivity.class);
        mIntent.putExtra(IntentFinal.INTENT_IMGURL_TO_PHOTOVIEWACTIVITY, new Gson().toJson(imgs, new TypeToken<String[]>() {
        }.getType()));
        mIntent.putExtra(IntentFinal.INTENT_IMGURL_INDEX_PHOTOVIEWACTIVITY, index);
        startActivity(mIntent);
    }
}
