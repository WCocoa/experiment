package com.qiantang.neighbourmother.ui.order.attache;


import android.os.Message;
import android.support.v4.app.FragmentManager;
import android.support.v4.app.FragmentTransaction;
import android.view.View;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;

import com.qiantang.neighbourmother.R;
import com.qiantang.neighbourmother.ui.BaseFragment;


/**
 * Created by quliang on 16-8-2.
 */
public class OrderFragment extends BaseFragment implements View.OnClickListener {
    private TextView order_delete;//删除

    private WaitPaymentFragment waitPaymentFragment;
    private UnderwayPaymentFragment underwayPaymentFragment;
    private FinishPaymentFragment finishPaymentFragment;

    private RelativeLayout ll_wait_payment;//待支付
    private ImageView wait_payment_icon;//待支付图标
    private TextView wait_payment;//待支付文字

    private RelativeLayout rl_underway;//进行中
    private ImageView underway_icon;//进行中图标
    private TextView underway;//进行中文字

    private RelativeLayout rl_finish_payment;//已结束
    private ImageView finish_payment_icon;//已结束图标
    private TextView finish_payment;//已结束文字

    private FrameLayout order_content;//内容

    @Override
    public int getContentView() {
        return R.layout.fragment_order;
    }

    @Override
    public void initView(View view) {
        order_delete = (TextView) view.findViewById(R.id.order_delete);
        ll_wait_payment = (RelativeLayout) view.findViewById(R.id.ll_wait_payment);
        wait_payment_icon = (ImageView) view.findViewById(R.id.wait_payment_icon);
        wait_payment = (TextView) view.findViewById(R.id.wait_payment);

        rl_finish_payment = (RelativeLayout) view.findViewById(R.id.rl_finish_payment);
        finish_payment_icon = (ImageView) view.findViewById(R.id.finish_payment_icon);
        finish_payment = (TextView) view.findViewById(R.id.finish_payment);

        rl_underway = (RelativeLayout) view.findViewById(R.id.rl_underway);
        underway_icon = (ImageView) view.findViewById(R.id.underway_icon);
        underway = (TextView) view.findViewById(R.id.underway);

        order_content = (FrameLayout) view.findViewById(R.id.order_content);
    }

    @Override
    public void initData() {
        waitPaymentFragment = new WaitPaymentFragment();
        underwayPaymentFragment = new UnderwayPaymentFragment();
        finishPaymentFragment = new FinishPaymentFragment();
        topTabStatusChange(1);
    }

    private int index;
    public boolean refreshFlag = false;

    private void topTabStatusChange(int i) {

        FragmentManager manager = getChildFragmentManager();
        FragmentTransaction transaction = manager.beginTransaction();
        index = i;
        switch (i) {
            case 1:
                transaction.replace(R.id.order_content, waitPaymentFragment);
                transaction.commit();
                wait_payment_icon.setSelected(true);
                wait_payment.setSelected(true);
                underway_icon.setSelected(false);
                underway.setSelected(false);
                finish_payment_icon.setSelected(false);
                finish_payment.setSelected(false);
                refreshFlag = true;
                break;
            case 2:
                transaction.replace(R.id.order_content, underwayPaymentFragment);
                transaction.commit();
                wait_payment_icon.setSelected(false);
                wait_payment.setSelected(false);
                underway_icon.setSelected(true);
                underway.setSelected(true);
                finish_payment_icon.setSelected(false);
                finish_payment.setSelected(false);
                refreshFlag = true;
                break;
            case 3:
                transaction.replace(R.id.order_content, finishPaymentFragment);
                transaction.commit();
                wait_payment_icon.setSelected(false);
                wait_payment.setSelected(false);
                underway_icon.setSelected(false);
                underway.setSelected(false);
                finish_payment_icon.setSelected(true);
                finish_payment.setSelected(true);
                refreshFlag = true;
                break;
        }
    }


    @Override
    public void initEvent() {
        order_delete.setOnClickListener(this);
        ll_wait_payment.setOnClickListener(this);
        rl_underway.setOnClickListener(this);
        rl_finish_payment.setOnClickListener(this);
    }

    @Override
    protected void updateUI(Message msg) {

    }

    public static boolean flag = true;

    @Override
    public void onClick(View v) {
        switch (v.getId()) {
            case R.id.order_delete:
                clickCancel();
                break;
            case R.id.ll_wait_payment:
                topTabStatusChange(1);
                break;
            case R.id.rl_underway:
                topTabStatusChange(2);
                break;
            case R.id.rl_finish_payment:
                topTabStatusChange(3);
                break;
        }
    }

    private void deleteItem(int index, boolean isShow) {

        switch (index) {
            case 1:
                waitPaymentFragment.deleteItem(isShow);
                break;
            case 2:
                underwayPaymentFragment.deleteItem(isShow);
                break;
            case 3:
                finishPaymentFragment.deleteItem(isShow);
                break;
        }
    }

    public void clickCancel() {

        if (flag) {
            flag = false;
            deleteItem(index, false);
        } else {
            flag = true;
            deleteItem(index, true);
        }
    }
}
